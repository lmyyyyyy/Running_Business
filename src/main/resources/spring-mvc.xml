<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.running.business.controller"/>
    <context:component-scan base-package="com.running.business.util, com.running.business.interceptor"/>
    <bean class="com.running.business.swagger.RestApiConfig"/>
    <bean id="requestUtil" class="com.running.business.util.RequestUtil">
        <property name="jedisClient" ref="jedisClient"/>
    </bean>
    <bean class="com.running.business.common.CorsConfigurerAdapter"></bean>
    <!-- 使用 Swagger Restful API文档时，添加此注解 -->
    <mvc:default-servlet-handler/>
    <mvc:interceptors>
        <!-- Interceptor拦截所有请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/users/**"/>
            <mvc:mapping path="/admins/**"/>
            <mvc:mapping path="/delivery/**"/>
            <mvc:mapping path="/order/**"/>
            <mvc:mapping path="/heartbeat/**"/>
            <mvc:mapping path="/monitor/**"/>
            <bean class="com.running.business.interceptor.LoginInterceptor">
                <!--定义拦截后重定向到默认的登录处理页面 -->
                <property name="defultLogin" value="/index" />
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- 配置好处理器 -->
    <bean id="websocketHandler" class="com.running.business.websocket.SystemWebSocketHandler"/>
    <!-- 配置拦截器 -->
    <websocket:handlers>
        <websocket:mapping path="/websocket/socketServer.do" handler="websocketHandler"/><!-- 连接的URL -->
        <websocket:handshake-interceptors>
            <bean class="com.running.business.interceptor.HandShakeInterceptor"/>
        </websocket:handshake-interceptors>
        <websocket:sockjs></websocket:sockjs>
    </websocket:handlers>
    <!--<import resource="spring-jedis.xml"/>-->
    <!--<import resource="spring-task.xml"/>-->
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven
            content-negotiation-manager="contentNegotiationManager"/>
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes">
            <value>
                atom=application/atom+xml
                html=text/html
                json=application/json
                *=*/*
            </value>
        </property>
    </bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<!-- <list> <ref bean="mappingJacksonHttpMessageConverter" /> JSON转换器
				</list> -->
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <!-- <list> <ref bean="mappingJacksonHttpMessageConverter" /> JSON转换器
                </list> -->
            <list>
                <bean
                        class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 拦截器配置 -->
    <!-- <mvc:interceptors> <mvc:interceptor> 拦截订单类请求 <mvc:mapping path="/**"/>
        <bean class="miko.interceptor.LoginInterceptor"/> </mvc:interceptor> </mvc:interceptors> -->
    <!-- 文件解析器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>  