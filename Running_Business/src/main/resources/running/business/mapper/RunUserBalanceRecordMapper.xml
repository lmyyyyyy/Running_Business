<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.running.business.mapper.RunUserBalanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.running.business.pojo.RunUserBalanceRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="user_old_balance" property="userOldBalance" jdbcType="DOUBLE" />
    <result column="user_amount" property="userAmount" jdbcType="DOUBLE" />
    <result column="user_new_balance" property="userNewBalance" jdbcType="DOUBLE" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="user_number" property="userNumber" jdbcType="VARCHAR" />
    <result column="user_time" property="userTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, user_old_balance, user_amount, user_new_balance, user_type, user_number, 
    user_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.running.business.pojo.RunUserBalanceRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from run_user_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from run_user_balance_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from run_user_balance_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.running.business.pojo.RunUserBalanceRecordExample" >
    delete from run_user_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.running.business.pojo.RunUserBalanceRecord" >
    insert into run_user_balance_record (id, uid, user_old_balance, 
      user_amount, user_new_balance, user_type, 
      user_number, user_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{userOldBalance,jdbcType=DOUBLE}, 
      #{userAmount,jdbcType=DOUBLE}, #{userNewBalance,jdbcType=DOUBLE}, #{userType,jdbcType=VARCHAR}, 
      #{userNumber,jdbcType=VARCHAR}, #{userTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.running.business.pojo.RunUserBalanceRecord" >
    insert into run_user_balance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="userOldBalance != null" >
        user_old_balance,
      </if>
      <if test="userAmount != null" >
        user_amount,
      </if>
      <if test="userNewBalance != null" >
        user_new_balance,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="userNumber != null" >
        user_number,
      </if>
      <if test="userTime != null" >
        user_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userOldBalance != null" >
        #{userOldBalance,jdbcType=DOUBLE},
      </if>
      <if test="userAmount != null" >
        #{userAmount,jdbcType=DOUBLE},
      </if>
      <if test="userNewBalance != null" >
        #{userNewBalance,jdbcType=DOUBLE},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null" >
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="userTime != null" >
        #{userTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.running.business.pojo.RunUserBalanceRecordExample" resultType="java.lang.Integer" >
    select count(*) from run_user_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update run_user_balance_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.userOldBalance != null" >
        user_old_balance = #{record.userOldBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.userAmount != null" >
        user_amount = #{record.userAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.userNewBalance != null" >
        user_new_balance = #{record.userNewBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.userNumber != null" >
        user_number = #{record.userNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userTime != null" >
        user_time = #{record.userTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update run_user_balance_record
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      user_old_balance = #{record.userOldBalance,jdbcType=DOUBLE},
      user_amount = #{record.userAmount,jdbcType=DOUBLE},
      user_new_balance = #{record.userNewBalance,jdbcType=DOUBLE},
      user_type = #{record.userType,jdbcType=VARCHAR},
      user_number = #{record.userNumber,jdbcType=VARCHAR},
      user_time = #{record.userTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.running.business.pojo.RunUserBalanceRecord" >
    update run_user_balance_record
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="userOldBalance != null" >
        user_old_balance = #{userOldBalance,jdbcType=DOUBLE},
      </if>
      <if test="userAmount != null" >
        user_amount = #{userAmount,jdbcType=DOUBLE},
      </if>
      <if test="userNewBalance != null" >
        user_new_balance = #{userNewBalance,jdbcType=DOUBLE},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null" >
        user_number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="userTime != null" >
        user_time = #{userTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.running.business.pojo.RunUserBalanceRecord" >
    update run_user_balance_record
    set uid = #{uid,jdbcType=INTEGER},
      user_old_balance = #{userOldBalance,jdbcType=DOUBLE},
      user_amount = #{userAmount,jdbcType=DOUBLE},
      user_new_balance = #{userNewBalance,jdbcType=DOUBLE},
      user_type = #{userType,jdbcType=VARCHAR},
      user_number = #{userNumber,jdbcType=VARCHAR},
      user_time = #{userTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>